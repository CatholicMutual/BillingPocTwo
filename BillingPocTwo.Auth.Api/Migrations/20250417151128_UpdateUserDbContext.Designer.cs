// <auto-generated />
using System;
using BillingPocTwo.Auth.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BillingPocTwo.Auth.Api.Migrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20250417151128_UpdateUserDbContext")]
    partial class UpdateUserDbContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BillingPocTwo.Shared.Entities.Auth.ROLE_MASTER", b =>
                {
                    b.Property<int>("SEQ_ROLE_MASTER")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SEQ_ROLE_MASTER"));

                    b.Property<long?>("CREATED_BY")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CREATED_ON")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EFFECTIVE_DATE")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EXPIRY_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("IS_LOCKED")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LOCKED_REASON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MODIFIED_BY")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("MODIFIED_ON")
                        .HasColumnType("datetime2");

                    b.Property<string>("ROLE_DESCRIPTION")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ROLE_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ROWID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SEQ_ROLE_MASTER");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("BillingPocTwo.Shared.Entities.Auth.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("ChangePasswordOnFirstLogin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiration")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ServiceUser")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UserUserRole", b =>
                {
                    b.Property<int>("SEQ_ROLE_MASTER")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SEQ_ROLE_MASTER", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserUserRole", (string)null);
                });

            modelBuilder.Entity("UserUserRole", b =>
                {
                    b.HasOne("BillingPocTwo.Shared.Entities.Auth.ROLE_MASTER", null)
                        .WithMany()
                        .HasForeignKey("SEQ_ROLE_MASTER")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UserUserRole_RoleMaster");

                    b.HasOne("BillingPocTwo.Shared.Entities.Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UserUserRole_User");
                });
#pragma warning restore 612, 618
        }
    }
}
